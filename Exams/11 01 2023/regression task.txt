{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c082ea8a",
   "metadata": {
    "papermill": {
     "duration": 0.011595,
     "end_time": "2023-01-10T20:12:54.376789",
     "exception": false,
     "start_time": "2023-01-10T20:12:54.365194",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Задача 2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8aa37364",
   "metadata": {
    "papermill": {
     "duration": 0.012193,
     "end_time": "2023-01-10T20:12:54.399600",
     "exception": false,
     "start_time": "2023-01-10T20:12:54.387407",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Используя библиотеку PyTorch, решите задачу регрессии. Разделите набор данных на обучающее и тестовое множество. Выполните предобработку данных. Отобразите графики значений функции потерь и метрики R2 на обучающем множестве. Рассчитайте значение метрики R2 на тестовом множестве.\n",
    "Датасет: … (20 баллов)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78e4bc9e",
   "metadata": {
    "papermill": {
     "duration": 0.011424,
     "end_time": "2023-01-10T20:12:54.425942",
     "exception": false,
     "start_time": "2023-01-10T20:12:54.414518",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "ВНИМАНИЕ ! В РАЗНЫХ ДАТАСЕТАХ ПРИДЕТСЯ ПОМЕНЯТЬ НЕКОТОРЫЕ ДАННЫЕ (К ПРИМЕРУ ДЛЯ ГРАФИКОВ И ДЛЯ НЕЙРОНОК, НО ВСЁ КРАЙНЕ ПРОСТО И ПОНЯТНО)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56ec2f12",
   "metadata": {
    "papermill": {
     "duration": 0.009859,
     "end_time": "2023-01-10T20:12:54.446572",
     "exception": false,
     "start_time": "2023-01-10T20:12:54.436713",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Места, где надо обратить внимание, я как-нибудь отмечу**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "38d52b76",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:12:54.468788Z",
     "iopub.status.busy": "2023-01-10T20:12:54.467800Z",
     "iopub.status.idle": "2023-01-10T20:12:59.715967Z",
     "shell.execute_reply": "2023-01-10T20:12:59.714448Z"
    },
    "papermill": {
     "duration": 5.26282,
     "end_time": "2023-01-10T20:12:59.719353",
     "exception": false,
     "start_time": "2023-01-10T20:12:54.456533",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import torch\n",
    "import torch.nn as nn\n",
    "from torch.utils.data import Dataset, DataLoader,TensorDataset,random_split\n",
    "import torch.nn.functional as F\n",
    "from torchmetrics import R2Score\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import sklearn\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn import preprocessing\n",
    "from sklearn.preprocessing import *\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "bd19f791",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:12:59.745468Z",
     "iopub.status.busy": "2023-01-10T20:12:59.744700Z",
     "iopub.status.idle": "2023-01-10T20:12:59.792318Z",
     "shell.execute_reply": "2023-01-10T20:12:59.790952Z"
    },
    "papermill": {
     "duration": 0.06391,
     "end_time": "2023-01-10T20:12:59.794767",
     "exception": false,
     "start_time": "2023-01-10T20:12:59.730857",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1030, 9)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cement (component 1)(kg in a m^3 mixture)</th>\n",
       "      <th>Blast Furnace Slag (component 2)(kg in a m^3 mixture)</th>\n",
       "      <th>Fly Ash (component 3)(kg in a m^3 mixture)</th>\n",
       "      <th>Water  (component 4)(kg in a m^3 mixture)</th>\n",
       "      <th>Superplasticizer (component 5)(kg in a m^3 mixture)</th>\n",
       "      <th>Coarse Aggregate  (component 6)(kg in a m^3 mixture)</th>\n",
       "      <th>Fine Aggregate (component 7)(kg in a m^3 mixture)</th>\n",
       "      <th>Age (day)</th>\n",
       "      <th>strength</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>540.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>162.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>1040.0</td>\n",
       "      <td>676.0</td>\n",
       "      <td>28</td>\n",
       "      <td>79.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>540.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>162.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>1055.0</td>\n",
       "      <td>676.0</td>\n",
       "      <td>28</td>\n",
       "      <td>61.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>332.5</td>\n",
       "      <td>142.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>228.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>932.0</td>\n",
       "      <td>594.0</td>\n",
       "      <td>270</td>\n",
       "      <td>40.27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>332.5</td>\n",
       "      <td>142.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>228.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>932.0</td>\n",
       "      <td>594.0</td>\n",
       "      <td>365</td>\n",
       "      <td>41.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>198.6</td>\n",
       "      <td>132.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>978.4</td>\n",
       "      <td>825.5</td>\n",
       "      <td>360</td>\n",
       "      <td>44.30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Cement (component 1)(kg in a m^3 mixture)  \\\n",
       "0                                      540.0   \n",
       "1                                      540.0   \n",
       "2                                      332.5   \n",
       "3                                      332.5   \n",
       "4                                      198.6   \n",
       "\n",
       "   Blast Furnace Slag (component 2)(kg in a m^3 mixture)  \\\n",
       "0                                                0.0       \n",
       "1                                                0.0       \n",
       "2                                              142.5       \n",
       "3                                              142.5       \n",
       "4                                              132.4       \n",
       "\n",
       "   Fly Ash (component 3)(kg in a m^3 mixture)  \\\n",
       "0                                         0.0   \n",
       "1                                         0.0   \n",
       "2                                         0.0   \n",
       "3                                         0.0   \n",
       "4                                         0.0   \n",
       "\n",
       "   Water  (component 4)(kg in a m^3 mixture)  \\\n",
       "0                                      162.0   \n",
       "1                                      162.0   \n",
       "2                                      228.0   \n",
       "3                                      228.0   \n",
       "4                                      192.0   \n",
       "\n",
       "   Superplasticizer (component 5)(kg in a m^3 mixture)  \\\n",
       "0                                                2.5     \n",
       "1                                                2.5     \n",
       "2                                                0.0     \n",
       "3                                                0.0     \n",
       "4                                                0.0     \n",
       "\n",
       "   Coarse Aggregate  (component 6)(kg in a m^3 mixture)  \\\n",
       "0                                             1040.0      \n",
       "1                                             1055.0      \n",
       "2                                              932.0      \n",
       "3                                              932.0      \n",
       "4                                              978.4      \n",
       "\n",
       "   Fine Aggregate (component 7)(kg in a m^3 mixture)  Age (day)  strength  \n",
       "0                                              676.0         28     79.99  \n",
       "1                                              676.0         28     61.89  \n",
       "2                                              594.0        270     40.27  \n",
       "3                                              594.0        365     41.05  \n",
       "4                                              825.5        360     44.30  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concrete = pd.read_csv(\"/kaggle/input/regression-dataset/regression/concrete.csv\")\n",
    "print(concrete.shape)\n",
    "concrete.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "cf36d552",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:12:59.819658Z",
     "iopub.status.busy": "2023-01-10T20:12:59.819213Z",
     "iopub.status.idle": "2023-01-10T20:12:59.870034Z",
     "shell.execute_reply": "2023-01-10T20:12:59.868958Z"
    },
    "papermill": {
     "duration": 0.066541,
     "end_time": "2023-01-10T20:12:59.872279",
     "exception": false,
     "start_time": "2023-01-10T20:12:59.805738",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cement (component 1)(kg in a m^3 mixture)</th>\n",
       "      <th>Blast Furnace Slag (component 2)(kg in a m^3 mixture)</th>\n",
       "      <th>Fly Ash (component 3)(kg in a m^3 mixture)</th>\n",
       "      <th>Water  (component 4)(kg in a m^3 mixture)</th>\n",
       "      <th>Superplasticizer (component 5)(kg in a m^3 mixture)</th>\n",
       "      <th>Coarse Aggregate  (component 6)(kg in a m^3 mixture)</th>\n",
       "      <th>Fine Aggregate (component 7)(kg in a m^3 mixture)</th>\n",
       "      <th>Age (day)</th>\n",
       "      <th>strength</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1030.000000</td>\n",
       "      <td>1030.000000</td>\n",
       "      <td>1030.000000</td>\n",
       "      <td>1030.000000</td>\n",
       "      <td>1030.000000</td>\n",
       "      <td>1030.000000</td>\n",
       "      <td>1030.000000</td>\n",
       "      <td>1030.000000</td>\n",
       "      <td>1030.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>281.167864</td>\n",
       "      <td>73.895825</td>\n",
       "      <td>54.188350</td>\n",
       "      <td>181.567282</td>\n",
       "      <td>6.204660</td>\n",
       "      <td>972.918932</td>\n",
       "      <td>773.580485</td>\n",
       "      <td>45.662136</td>\n",
       "      <td>35.817961</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>104.506364</td>\n",
       "      <td>86.279342</td>\n",
       "      <td>63.997004</td>\n",
       "      <td>21.354219</td>\n",
       "      <td>5.973841</td>\n",
       "      <td>77.753954</td>\n",
       "      <td>80.175980</td>\n",
       "      <td>63.169912</td>\n",
       "      <td>16.705742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>102.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>121.800000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>801.000000</td>\n",
       "      <td>594.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.330000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>192.375000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>164.900000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>932.000000</td>\n",
       "      <td>730.950000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>23.710000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>272.900000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>185.000000</td>\n",
       "      <td>6.400000</td>\n",
       "      <td>968.000000</td>\n",
       "      <td>779.500000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>34.445000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>350.000000</td>\n",
       "      <td>142.950000</td>\n",
       "      <td>118.300000</td>\n",
       "      <td>192.000000</td>\n",
       "      <td>10.200000</td>\n",
       "      <td>1029.400000</td>\n",
       "      <td>824.000000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>46.135000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>540.000000</td>\n",
       "      <td>359.400000</td>\n",
       "      <td>200.100000</td>\n",
       "      <td>247.000000</td>\n",
       "      <td>32.200000</td>\n",
       "      <td>1145.000000</td>\n",
       "      <td>992.600000</td>\n",
       "      <td>365.000000</td>\n",
       "      <td>82.600000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Cement (component 1)(kg in a m^3 mixture)  \\\n",
       "count                                1030.000000   \n",
       "mean                                  281.167864   \n",
       "std                                   104.506364   \n",
       "min                                   102.000000   \n",
       "25%                                   192.375000   \n",
       "50%                                   272.900000   \n",
       "75%                                   350.000000   \n",
       "max                                   540.000000   \n",
       "\n",
       "       Blast Furnace Slag (component 2)(kg in a m^3 mixture)  \\\n",
       "count                                        1030.000000       \n",
       "mean                                           73.895825       \n",
       "std                                            86.279342       \n",
       "min                                             0.000000       \n",
       "25%                                             0.000000       \n",
       "50%                                            22.000000       \n",
       "75%                                           142.950000       \n",
       "max                                           359.400000       \n",
       "\n",
       "       Fly Ash (component 3)(kg in a m^3 mixture)  \\\n",
       "count                                 1030.000000   \n",
       "mean                                    54.188350   \n",
       "std                                     63.997004   \n",
       "min                                      0.000000   \n",
       "25%                                      0.000000   \n",
       "50%                                      0.000000   \n",
       "75%                                    118.300000   \n",
       "max                                    200.100000   \n",
       "\n",
       "       Water  (component 4)(kg in a m^3 mixture)  \\\n",
       "count                                1030.000000   \n",
       "mean                                  181.567282   \n",
       "std                                    21.354219   \n",
       "min                                   121.800000   \n",
       "25%                                   164.900000   \n",
       "50%                                   185.000000   \n",
       "75%                                   192.000000   \n",
       "max                                   247.000000   \n",
       "\n",
       "       Superplasticizer (component 5)(kg in a m^3 mixture)  \\\n",
       "count                                        1030.000000     \n",
       "mean                                            6.204660     \n",
       "std                                             5.973841     \n",
       "min                                             0.000000     \n",
       "25%                                             0.000000     \n",
       "50%                                             6.400000     \n",
       "75%                                            10.200000     \n",
       "max                                            32.200000     \n",
       "\n",
       "       Coarse Aggregate  (component 6)(kg in a m^3 mixture)  \\\n",
       "count                                        1030.000000      \n",
       "mean                                          972.918932      \n",
       "std                                            77.753954      \n",
       "min                                           801.000000      \n",
       "25%                                           932.000000      \n",
       "50%                                           968.000000      \n",
       "75%                                          1029.400000      \n",
       "max                                          1145.000000      \n",
       "\n",
       "       Fine Aggregate (component 7)(kg in a m^3 mixture)    Age (day)  \\\n",
       "count                                        1030.000000  1030.000000   \n",
       "mean                                          773.580485    45.662136   \n",
       "std                                            80.175980    63.169912   \n",
       "min                                           594.000000     1.000000   \n",
       "25%                                           730.950000     7.000000   \n",
       "50%                                           779.500000    28.000000   \n",
       "75%                                           824.000000    56.000000   \n",
       "max                                           992.600000   365.000000   \n",
       "\n",
       "          strength  \n",
       "count  1030.000000  \n",
       "mean     35.817961  \n",
       "std      16.705742  \n",
       "min       2.330000  \n",
       "25%      23.710000  \n",
       "50%      34.445000  \n",
       "75%      46.135000  \n",
       "max      82.600000  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concrete.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "efeeffa2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:12:59.898349Z",
     "iopub.status.busy": "2023-01-10T20:12:59.897308Z",
     "iopub.status.idle": "2023-01-10T20:12:59.907135Z",
     "shell.execute_reply": "2023-01-10T20:12:59.905756Z"
    },
    "papermill": {
     "duration": 0.024745,
     "end_time": "2023-01-10T20:12:59.909534",
     "exception": false,
     "start_time": "2023-01-10T20:12:59.884789",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Cement (component 1)(kg in a m^3 mixture)                0\n",
       "Blast Furnace Slag (component 2)(kg in a m^3 mixture)    0\n",
       "Fly Ash (component 3)(kg in a m^3 mixture)               0\n",
       "Water  (component 4)(kg in a m^3 mixture)                0\n",
       "Superplasticizer (component 5)(kg in a m^3 mixture)      0\n",
       "Coarse Aggregate  (component 6)(kg in a m^3 mixture)     0\n",
       "Fine Aggregate (component 7)(kg in a m^3 mixture)        0\n",
       "Age (day)                                                0\n",
       "strength                                                 0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concrete.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "89af0f9a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:12:59.934427Z",
     "iopub.status.busy": "2023-01-10T20:12:59.933191Z",
     "iopub.status.idle": "2023-01-10T20:12:59.943248Z",
     "shell.execute_reply": "2023-01-10T20:12:59.942109Z"
    },
    "papermill": {
     "duration": 0.024776,
     "end_time": "2023-01-10T20:12:59.945710",
     "exception": false,
     "start_time": "2023-01-10T20:12:59.920934",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concrete.isnull().sum().sum() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ec0b4e3e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:12:59.971633Z",
     "iopub.status.busy": "2023-01-10T20:12:59.971147Z",
     "iopub.status.idle": "2023-01-10T20:12:59.989282Z",
     "shell.execute_reply": "2023-01-10T20:12:59.987725Z"
    },
    "papermill": {
     "duration": 0.034942,
     "end_time": "2023-01-10T20:12:59.992343",
     "exception": false,
     "start_time": "2023-01-10T20:12:59.957401",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1030 entries, 0 to 1029\n",
      "Data columns (total 9 columns):\n",
      " #   Column                                                 Non-Null Count  Dtype  \n",
      "---  ------                                                 --------------  -----  \n",
      " 0   Cement (component 1)(kg in a m^3 mixture)              1030 non-null   float64\n",
      " 1   Blast Furnace Slag (component 2)(kg in a m^3 mixture)  1030 non-null   float64\n",
      " 2   Fly Ash (component 3)(kg in a m^3 mixture)             1030 non-null   float64\n",
      " 3   Water  (component 4)(kg in a m^3 mixture)              1030 non-null   float64\n",
      " 4   Superplasticizer (component 5)(kg in a m^3 mixture)    1030 non-null   float64\n",
      " 5   Coarse Aggregate  (component 6)(kg in a m^3 mixture)   1030 non-null   float64\n",
      " 6   Fine Aggregate (component 7)(kg in a m^3 mixture)      1030 non-null   float64\n",
      " 7   Age (day)                                              1030 non-null   int64  \n",
      " 8   strength                                               1030 non-null   float64\n",
      "dtypes: float64(8), int64(1)\n",
      "memory usage: 72.5 KB\n"
     ]
    }
   ],
   "source": [
    "concrete.info(memory_usage='deep')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6493bf81",
   "metadata": {
    "papermill": {
     "duration": 0.012562,
     "end_time": "2023-01-10T20:13:00.017754",
     "exception": false,
     "start_time": "2023-01-10T20:13:00.005192",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "***Здесь необходимо самим смотреть, что классифицировать. По какому признаку - отмечено ниже в комменте***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7bdb55f3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:00.044126Z",
     "iopub.status.busy": "2023-01-10T20:13:00.043261Z",
     "iopub.status.idle": "2023-01-10T20:13:00.057335Z",
     "shell.execute_reply": "2023-01-10T20:13:00.055963Z"
    },
    "papermill": {
     "duration": 0.031181,
     "end_time": "2023-01-10T20:13:00.060667",
     "exception": false,
     "start_time": "2023-01-10T20:13:00.029486",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Cement (component 1)(kg in a m^3 mixture)                278\n",
       "Blast Furnace Slag (component 2)(kg in a m^3 mixture)    185\n",
       "Fly Ash (component 3)(kg in a m^3 mixture)               156\n",
       "Water  (component 4)(kg in a m^3 mixture)                195\n",
       "Superplasticizer (component 5)(kg in a m^3 mixture)      111\n",
       "Coarse Aggregate  (component 6)(kg in a m^3 mixture)     284\n",
       "Fine Aggregate (component 7)(kg in a m^3 mixture)        302\n",
       "Age (day)                                                 14\n",
       "strength                                                 845\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Видим, что у Age всего 14 уникальных значений. Чтобы \"оптимизировать\" датасет мы сделаем данную колонку категориальной\n",
    "concrete.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b0d47d78",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:00.088802Z",
     "iopub.status.busy": "2023-01-10T20:13:00.088381Z",
     "iopub.status.idle": "2023-01-10T20:13:00.095799Z",
     "shell.execute_reply": "2023-01-10T20:13:00.094349Z"
    },
    "papermill": {
     "duration": 0.025582,
     "end_time": "2023-01-10T20:13:00.098348",
     "exception": false,
     "start_time": "2023-01-10T20:13:00.072766",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "concrete['Age (day)'] = concrete['Age (day)'].astype('category')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ce03090b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:00.128313Z",
     "iopub.status.busy": "2023-01-10T20:13:00.127605Z",
     "iopub.status.idle": "2023-01-10T20:13:00.139979Z",
     "shell.execute_reply": "2023-01-10T20:13:00.138702Z"
    },
    "papermill": {
     "duration": 0.031395,
     "end_time": "2023-01-10T20:13:00.143306",
     "exception": false,
     "start_time": "2023-01-10T20:13:00.111911",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1030 entries, 0 to 1029\n",
      "Data columns (total 9 columns):\n",
      " #   Column                                                 Non-Null Count  Dtype   \n",
      "---  ------                                                 --------------  -----   \n",
      " 0   Cement (component 1)(kg in a m^3 mixture)              1030 non-null   float64 \n",
      " 1   Blast Furnace Slag (component 2)(kg in a m^3 mixture)  1030 non-null   float64 \n",
      " 2   Fly Ash (component 3)(kg in a m^3 mixture)             1030 non-null   float64 \n",
      " 3   Water  (component 4)(kg in a m^3 mixture)              1030 non-null   float64 \n",
      " 4   Superplasticizer (component 5)(kg in a m^3 mixture)    1030 non-null   float64 \n",
      " 5   Coarse Aggregate  (component 6)(kg in a m^3 mixture)   1030 non-null   float64 \n",
      " 6   Fine Aggregate (component 7)(kg in a m^3 mixture)      1030 non-null   float64 \n",
      " 7   Age (day)                                              1030 non-null   category\n",
      " 8   strength                                               1030 non-null   float64 \n",
      "dtypes: category(1), float64(8)\n",
      "memory usage: 66.2 KB\n"
     ]
    }
   ],
   "source": [
    "concrete.info(memory_usage='deep')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "975f4980",
   "metadata": {
    "papermill": {
     "duration": 0.012034,
     "end_time": "2023-01-10T20:13:00.168103",
     "exception": false,
     "start_time": "2023-01-10T20:13:00.156069",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Графики\n",
    "\n",
    "***Тут можете поиграться и посмотреть зависимости одной колонки от другой. Если что, можете запустить цикл по всем колонкам со всеми колонками (время выполнения может значительно увеличиться)***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5b468095",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:00.193893Z",
     "iopub.status.busy": "2023-01-10T20:13:00.193445Z",
     "iopub.status.idle": "2023-01-10T20:13:00.498644Z",
     "shell.execute_reply": "2023-01-10T20:13:00.497715Z"
    },
    "papermill": {
     "duration": 0.321522,
     "end_time": "2023-01-10T20:13:00.501461",
     "exception": false,
     "start_time": "2023-01-10T20:13:00.179939",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Cement (component 1)(kg in a m^3 mixture)', ylabel='Age (day)'>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(x=concrete['Cement (component 1)(kg in a m^3 mixture)'],y=concrete['Age (day)'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "cfa6a81a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:00.530237Z",
     "iopub.status.busy": "2023-01-10T20:13:00.529313Z",
     "iopub.status.idle": "2023-01-10T20:13:00.966138Z",
     "shell.execute_reply": "2023-01-10T20:13:00.964752Z"
    },
    "papermill": {
     "duration": 0.453864,
     "end_time": "2023-01-10T20:13:00.968661",
     "exception": false,
     "start_time": "2023-01-10T20:13:00.514797",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Cement (component 1)(kg in a m^3 mixture)', ylabel='Age (day)'>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Нет никакой регрессии \n",
    "sns.regplot(x=concrete['Cement (component 1)(kg in a m^3 mixture)'],y=concrete['Age (day)'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "28782b57",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:00.997340Z",
     "iopub.status.busy": "2023-01-10T20:13:00.996926Z",
     "iopub.status.idle": "2023-01-10T20:13:01.258941Z",
     "shell.execute_reply": "2023-01-10T20:13:01.257627Z"
    },
    "papermill": {
     "duration": 0.279697,
     "end_time": "2023-01-10T20:13:01.261516",
     "exception": false,
     "start_time": "2023-01-10T20:13:00.981819",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Cement (component 1)(kg in a m^3 mixture)', ylabel='Age (day)'>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.regplot(x=concrete['Cement (component 1)(kg in a m^3 mixture)'],y=concrete['Age (day)'], data=concrete, order=3, ci=None)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "699084a1",
   "metadata": {
    "papermill": {
     "duration": 0.014066,
     "end_time": "2023-01-10T20:13:01.290088",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.276022",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Регрессия Pytorch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "5a888426",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:01.323307Z",
     "iopub.status.busy": "2023-01-10T20:13:01.322297Z",
     "iopub.status.idle": "2023-01-10T20:13:01.329770Z",
     "shell.execute_reply": "2023-01-10T20:13:01.328541Z"
    },
    "papermill": {
     "duration": 0.02635,
     "end_time": "2023-01-10T20:13:01.332255",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.305905",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Cement (component 1)(kg in a m^3 mixture)',\n",
       "       'Blast Furnace Slag (component 2)(kg in a m^3 mixture)',\n",
       "       'Fly Ash (component 3)(kg in a m^3 mixture)',\n",
       "       'Water  (component 4)(kg in a m^3 mixture)',\n",
       "       'Superplasticizer (component 5)(kg in a m^3 mixture)',\n",
       "       'Coarse Aggregate  (component 6)(kg in a m^3 mixture)',\n",
       "       'Fine Aggregate (component 7)(kg in a m^3 mixture)', 'Age (day)',\n",
       "       'strength'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concrete.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1d70296b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:01.364266Z",
     "iopub.status.busy": "2023-01-10T20:13:01.363081Z",
     "iopub.status.idle": "2023-01-10T20:13:01.369005Z",
     "shell.execute_reply": "2023-01-10T20:13:01.367841Z"
    },
    "papermill": {
     "duration": 0.024894,
     "end_time": "2023-01-10T20:13:01.371989",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.347095",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#СЮДА МОЖНО ВСТАВИТЬ ТО, ЧТО ИЩЕМ \n",
    "looking_for = 'Cement (component 1)(kg in a m^3 mixture)'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "c221abea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:01.402458Z",
     "iopub.status.busy": "2023-01-10T20:13:01.401991Z",
     "iopub.status.idle": "2023-01-10T20:13:01.408125Z",
     "shell.execute_reply": "2023-01-10T20:13:01.407228Z"
    },
    "papermill": {
     "duration": 0.024762,
     "end_time": "2023-01-10T20:13:01.411016",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.386254",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = concrete.drop(labels=[looking_for], axis=1)\n",
    "y = concrete[looking_for]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "d817fd0a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:01.443104Z",
     "iopub.status.busy": "2023-01-10T20:13:01.442393Z",
     "iopub.status.idle": "2023-01-10T20:13:01.451973Z",
     "shell.execute_reply": "2023-01-10T20:13:01.451038Z"
    },
    "papermill": {
     "duration": 0.028276,
     "end_time": "2023-01-10T20:13:01.454610",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.426334",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "sscaler = preprocessing.StandardScaler()\n",
    "sscaler.fit(X)\n",
    "X_std= sscaler.transform(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ec1e9839",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:01.485130Z",
     "iopub.status.busy": "2023-01-10T20:13:01.484306Z",
     "iopub.status.idle": "2023-01-10T20:13:01.493695Z",
     "shell.execute_reply": "2023-01-10T20:13:01.492539Z"
    },
    "papermill": {
     "duration": 0.027247,
     "end_time": "2023-01-10T20:13:01.495969",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.468722",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(721, 8)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train,X_test,y_train,y_test=train_test_split(X_std,y,test_size=0.3,random_state=42)\n",
    "X_train.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "90bc0212",
   "metadata": {
    "papermill": {
     "duration": 0.014845,
     "end_time": "2023-01-10T20:13:01.525411",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.510566",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "!!! ОБРАЩАЙТЕ ВНИМАНИЕ НА КОММЕНТЫ В ЭТИХ МЕСТАХ"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75d080e7",
   "metadata": {
    "papermill": {
     "duration": 0.013575,
     "end_time": "2023-01-10T20:13:01.553139",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.539564",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "***Здесь вы можете менять значенияя***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d73965e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:01.583684Z",
     "iopub.status.busy": "2023-01-10T20:13:01.582892Z",
     "iopub.status.idle": "2023-01-10T20:13:01.598424Z",
     "shell.execute_reply": "2023-01-10T20:13:01.597137Z"
    },
    "papermill": {
     "duration": 0.034686,
     "end_time": "2023-01-10T20:13:01.601952",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.567266",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "NN(\n",
      "  (layer1): Linear(in_features=8, out_features=24, bias=True)\n",
      "  (layer2): Linear(in_features=24, out_features=16, bias=True)\n",
      "  (layer3): Linear(in_features=16, out_features=8, bias=True)\n",
      "  (layer4): Linear(in_features=8, out_features=1, bias=True)\n",
      ")\n"
     ]
    }
   ],
   "source": [
    "class NN(nn.Module):\n",
    "  def __init__(self):\n",
    "    super(NN,self).__init__()\n",
    "    # ВНИМАНИЕ! Если вы будете добавлять слои, то не забывайте про epochs (кол-во эпох) и про learning_rate (lr). Возможно вам придетс подкрутить данные значения\n",
    "    self.layer1=nn.Linear(X_train.shape[1],24) # Можете тут поиграться с кол-во слоёв\n",
    "    self.layer2=nn.Linear(24,16) # вот слой\n",
    "    self.layer3=nn.Linear(16,8) # и вот слой\n",
    "    self.layer4=nn.Linear(8,1) # желательно, чтобы всё сводилось к 1 (пример вы видите на экране)\n",
    "    # важно ! Обращайте внимание, что как вы видите x_train.shape выше имеет значение 721, 8 и тут мы сводим к 8\n",
    "    # Поэтому сводите всё так, чтобы в конечном итоге было как (shape 2 значение, 1)\n",
    "    \n",
    "  def forward(self,x):\n",
    "    x=F.relu(self.layer1(x)) # сколько слоёв выше, столько же и здесь должно вызываться. Всё крайне просто\n",
    "    x=F.relu(self.layer2(x))\n",
    "    x=F.relu(self.layer3(x))\n",
    "    x=self.layer4(x)\n",
    "    return x\n",
    "model = NN()\n",
    "print(model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "0e86946c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:01.632457Z",
     "iopub.status.busy": "2023-01-10T20:13:01.632050Z",
     "iopub.status.idle": "2023-01-10T20:13:01.643444Z",
     "shell.execute_reply": "2023-01-10T20:13:01.642416Z"
    },
    "papermill": {
     "duration": 0.029645,
     "end_time": "2023-01-10T20:13:01.646049",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.616404",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[-0.8569,  0.7240, -0.7481,  ...,  1.6512, -0.2797, -0.6048],\n",
       "        [-0.8569, -0.8471,  0.1140,  ...,  0.1175, -0.6123, -1.0946],\n",
       "        [ 1.6072, -0.8471, -1.2119,  ...,  1.3330, -0.6757, -0.6359],\n",
       "        ...,\n",
       "        [-0.8569,  1.1101, -0.7012,  ...,  0.3160,  0.8606, -0.1352],\n",
       "        [ 0.5207, -0.8471, -0.0219,  ...,  0.0988, -0.2797,  1.9453],\n",
       "        [-0.8569,  0.9194, -0.5419,  ...,  0.1175, -0.2797,  0.1582]],\n",
       "       requires_grad=True)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=torch.tensor(np.array(X_train),dtype=torch.float32,requires_grad=True)\n",
    "y=torch.tensor(np.array(y_train).reshape(-1,1),dtype=torch.float32)\n",
    "x"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44bb9a2b",
   "metadata": {
    "papermill": {
     "duration": 0.016943,
     "end_time": "2023-01-10T20:13:01.679363",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.662420",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "***Здесь тоже можете менять значения***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "7d366db1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:01.710822Z",
     "iopub.status.busy": "2023-01-10T20:13:01.709808Z",
     "iopub.status.idle": "2023-01-10T20:13:01.715941Z",
     "shell.execute_reply": "2023-01-10T20:13:01.715123Z"
    },
    "papermill": {
     "duration": 0.023825,
     "end_time": "2023-01-10T20:13:01.718307",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.694482",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#import torch.optim as optim\n",
    "loss_fn=nn.MSELoss()\n",
    "optimizer= torch.optim.SGD(model.parameters(),lr=0.0001) # Можете поиграться с lr "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a67cdce2",
   "metadata": {
    "papermill": {
     "duration": 0.013722,
     "end_time": "2023-01-10T20:13:01.745908",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.732186",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "***И здесь кол-во эпох и коммент***"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a5e86caa",
   "metadata": {
    "papermill": {
     "duration": 0.013483,
     "end_time": "2023-01-10T20:13:01.773003",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.759520",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Если вы заметили, что loss у вас уходит в nan, то стоит поменять значение epochs и добавить нули в lr (можно ещё добавить или убрать слои в классе NN). После этого, надо всё перезагрузить (если не будете видеть явных изменений)**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "f10dcaec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:01.803239Z",
     "iopub.status.busy": "2023-01-10T20:13:01.802790Z",
     "iopub.status.idle": "2023-01-10T20:13:03.153312Z",
     "shell.execute_reply": "2023-01-10T20:13:03.152020Z"
    },
    "papermill": {
     "duration": 1.369299,
     "end_time": "2023-01-10T20:13:03.156276",
     "exception": false,
     "start_time": "2023-01-10T20:13:01.786977",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "epochs: 0......loss:92619.4609375\n",
      "epochs: 50......loss:80755.65625\n",
      "epochs: 100......loss:2167.437255859375\n",
      "epochs: 150......loss:3540.054443359375\n",
      "epochs: 200......loss:2213.640869140625\n",
      "epochs: 250......loss:1813.294189453125\n",
      "epochs: 300......loss:1554.8873291015625\n",
      "epochs: 350......loss:1448.0023193359375\n",
      "epochs: 400......loss:1384.404296875\n",
      "epochs: 450......loss:1362.236572265625\n",
      "epochs: 500......loss:1338.49462890625\n",
      "epochs: 550......loss:1342.472900390625\n",
      "epochs: 600......loss:1316.7412109375\n",
      "epochs: 650......loss:1277.717529296875\n",
      "epochs: 700......loss:1251.012451171875\n",
      "epochs: 750......loss:1222.6236572265625\n",
      "epochs: 800......loss:1200.57373046875\n",
      "epochs: 850......loss:1171.9281005859375\n",
      "epochs: 900......loss:1150.70751953125\n",
      "epochs: 950......loss:1128.4759521484375\n",
      "epochs: 1000......loss:1114.19189453125\n",
      "epochs: 1050......loss:1097.7010498046875\n",
      "epochs: 1100......loss:1074.6566162109375\n",
      "epochs: 1150......loss:1068.6868896484375\n",
      "epochs: 1200......loss:1053.569091796875\n",
      "epochs: 1250......loss:1040.682373046875\n",
      "epochs: 1300......loss:1030.925048828125\n",
      "epochs: 1350......loss:1019.0556640625\n",
      "epochs: 1400......loss:1003.7677001953125\n",
      "epochs: 1450......loss:984.7168579101562\n"
     ]
    }
   ],
   "source": [
    "epochs=1500 # И можете потрогать это значение\n",
    "losses=[]\n",
    "iters=[]\n",
    "for i in range(epochs):\n",
    "  running_loss = 0.0\n",
    "  #initialize the model parameter\n",
    "  optimizer.zero_grad(set_to_none=True)\n",
    "  #calculate the loss\n",
    "  output=model(x)\n",
    "  loss=loss_fn(output,y)\n",
    "  losses.append(running_loss+loss.item())\n",
    "  iters.append(i)\n",
    "  #backpropagation\n",
    "  loss.backward()\n",
    "  #update the parameters\n",
    "  optimizer.step()\n",
    "  if(i%10==0):\n",
    "        iters.append(i)\n",
    "        losses.append(loss)\n",
    "        \n",
    "  if(i%50==0):\n",
    "    print(f\"epochs: {i}......loss:{loss}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "e29e550a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:03.186803Z",
     "iopub.status.busy": "2023-01-10T20:13:03.186421Z",
     "iopub.status.idle": "2023-01-10T20:13:03.193864Z",
     "shell.execute_reply": "2023-01-10T20:13:03.192777Z"
    },
    "papermill": {
     "duration": 0.025531,
     "end_time": "2023-01-10T20:13:03.196349",
     "exception": false,
     "start_time": "2023-01-10T20:13:03.170818",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_train_pred = model(torch.tensor(X_train,dtype=torch.float32,requires_grad=True))\n",
    "y_test_pred = model(torch.tensor(X_test,dtype=torch.float32))\n",
    "\n",
    "#convert to numpy array\n",
    "y_train_pred = y_train_pred.detach().numpy()\n",
    "y_test_pred = y_test_pred.detach().numpy()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b25a8ff8",
   "metadata": {
    "papermill": {
     "duration": 0.014673,
     "end_time": "2023-01-10T20:13:03.225693",
     "exception": false,
     "start_time": "2023-01-10T20:13:03.211020",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Чтобы узнать, что у нас нет переобучения и недообучения - смотрим на результаты ниже. Если разница между ними не особо большая - вы молодец ! У всё хорошо :)\n",
    "\n",
    "К тому, стоит заметить, что если у вас будет 1 - то качество предсказаний крайне хорошее. Если 0, то не так страшно, но надо думать как улучшить модель. Если пошли отрицательные значения дальше -0.5 - надо играться с теми параметрами, про которые я писал выше"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "30c14fae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:03.258081Z",
     "iopub.status.busy": "2023-01-10T20:13:03.257649Z",
     "iopub.status.idle": "2023-01-10T20:13:03.268941Z",
     "shell.execute_reply": "2023-01-10T20:13:03.267616Z"
    },
    "papermill": {
     "duration": 0.031348,
     "end_time": "2023-01-10T20:13:03.271370",
     "exception": false,
     "start_time": "2023-01-10T20:13:03.240022",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9170774738599308\n",
      "0.8658710099590912\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import r2_score\n",
    "\n",
    "test_accuracy=r2_score(y_test,y_test_pred)\n",
    "train_accuracy=r2_score(y_train,y_train_pred)\n",
    "print(train_accuracy)\n",
    "print(test_accuracy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "9570179c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:03.302541Z",
     "iopub.status.busy": "2023-01-10T20:13:03.302089Z",
     "iopub.status.idle": "2023-01-10T20:13:03.515859Z",
     "shell.execute_reply": "2023-01-10T20:13:03.514790Z"
    },
    "papermill": {
     "duration": 0.232474,
     "end_time": "2023-01-10T20:13:03.518402",
     "exception": false,
     "start_time": "2023-01-10T20:13:03.285928",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(np.arange(len(iters)),list(map(float, losses)), 'r', linewidth=0.3)\n",
    "plt.xlabel('Epoch')\n",
    "plt.ylabel('Loss')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b53a429e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:03.550989Z",
     "iopub.status.busy": "2023-01-10T20:13:03.550565Z",
     "iopub.status.idle": "2023-01-10T20:13:03.828463Z",
     "shell.execute_reply": "2023-01-10T20:13:03.827293Z"
    },
    "papermill": {
     "duration": 0.297093,
     "end_time": "2023-01-10T20:13:03.830967",
     "exception": false,
     "start_time": "2023-01-10T20:13:03.533874",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.xlabel(looking_for)\n",
    "plt.ylabel(f\"Predicted {looking_for} \")\n",
    "plt.scatter(y_train,y_train_pred,color='r',label=\"train_data\")\n",
    "plt.scatter(y_test,y_test_pred,color='b',label=\"test_data\")\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "ad92f966",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:03.866899Z",
     "iopub.status.busy": "2023-01-10T20:13:03.866403Z",
     "iopub.status.idle": "2023-01-10T20:13:04.126800Z",
     "shell.execute_reply": "2023-01-10T20:13:04.125449Z"
    },
    "papermill": {
     "duration": 0.281486,
     "end_time": "2023-01-10T20:13:04.129364",
     "exception": false,
     "start_time": "2023-01-10T20:13:03.847878",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.xlabel(looking_for)\n",
    "plt.ylabel(f\"Predicted {looking_for} \")\n",
    "plt.plot(y_train,y_train_pred,color='r',label=\"train_data\")\n",
    "plt.plot(y_test,y_test_pred,color='b',label=\"test_data\")\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f0a54be",
   "metadata": {
    "papermill": {
     "duration": 0.015798,
     "end_time": "2023-01-10T20:13:04.161312",
     "exception": false,
     "start_time": "2023-01-10T20:13:04.145514",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 3 Задание\n",
    "\n",
    "При помощи возможностей по автоматическому дифференцированию, которые предоставляет библиотека PyTorch, найдите минимум функции y=ln⁡(x2+10x+10) на отрезке [-10, 10]. Реализуйте процесс поиска экстремума таким образом, чтобы при нахождении точки экстремума процедура поиска останавливалась. Продемонстрируйте процесс оптимизации. Изобразите график функции y(x) на заданном отрезке. (20 баллов)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "dca2fd13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:04.195963Z",
     "iopub.status.busy": "2023-01-10T20:13:04.195581Z",
     "iopub.status.idle": "2023-01-10T20:13:04.456362Z",
     "shell.execute_reply": "2023-01-10T20:13:04.454472Z"
    },
    "papermill": {
     "duration": 0.281645,
     "end_time": "2023-01-10T20:13:04.459394",
     "exception": false,
     "start_time": "2023-01-10T20:13:04.177749",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import math\n",
    "x = torch.linspace(-10, 10, 100, requires_grad = True)\n",
    "Y = torch.log(x**2 + 10*x + 10)\n",
    "y = torch.sum(Y)\n",
    "y.backward()\n",
    " \n",
    "# ploting the function and derivative\n",
    "function_line, = plt.plot(x.detach().numpy(), Y.detach().numpy(), label = 'Function')\n",
    "function_line.set_color(\"red\")\n",
    "derivative_line, = plt.plot(x.detach().numpy(), x.grad.detach().numpy(), label = 'Derivative')\n",
    "derivative_line.set_color(\"green\")\n",
    "plt.xlabel('x')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "2eb4a31b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:04.496859Z",
     "iopub.status.busy": "2023-01-10T20:13:04.495832Z",
     "iopub.status.idle": "2023-01-10T20:13:04.501476Z",
     "shell.execute_reply": "2023-01-10T20:13:04.500463Z"
    },
    "papermill": {
     "duration": 0.026416,
     "end_time": "2023-01-10T20:13:04.504085",
     "exception": false,
     "start_time": "2023-01-10T20:13:04.477669",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import torch.optim as optim\n",
    "\n",
    "parameters = [x]  # This should be the list of model parameters\n",
    "optimizer = optim.Adam(parameters, lr=0.01)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "166fe5dd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:04.539498Z",
     "iopub.status.busy": "2023-01-10T20:13:04.539022Z",
     "iopub.status.idle": "2023-01-10T20:13:04.545273Z",
     "shell.execute_reply": "2023-01-10T20:13:04.543755Z"
    },
    "papermill": {
     "duration": 0.028213,
     "end_time": "2023-01-10T20:13:04.548865",
     "exception": false,
     "start_time": "2023-01-10T20:13:04.520652",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def func_2d(x):\n",
    "    return torch.log(x**2 + 10*x + 10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "8e1d6614",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:04.587773Z",
     "iopub.status.busy": "2023-01-10T20:13:04.587348Z",
     "iopub.status.idle": "2023-01-10T20:13:20.672870Z",
     "shell.execute_reply": "2023-01-10T20:13:20.671634Z"
    },
    "papermill": {
     "duration": 16.107761,
     "end_time": "2023-01-10T20:13:20.675398",
     "exception": false,
     "start_time": "2023-01-10T20:13:04.567637",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\r\n",
      "\u001b[0m"
     ]
    }
   ],
   "source": [
    "!wget -q https://raw.githubusercontent.com/theevann/amld-pytorch-workshop/master/live_plot.py -O live_plot.py\n",
    "!pip install -q ipympl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c13bde45",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:20.711574Z",
     "iopub.status.busy": "2023-01-10T20:13:20.711096Z",
     "iopub.status.idle": "2023-01-10T20:13:22.446774Z",
     "shell.execute_reply": "2023-01-10T20:13:22.444379Z"
    },
    "papermill": {
     "duration": 1.757955,
     "end_time": "2023-01-10T20:13:22.450413",
     "exception": false,
     "start_time": "2023-01-10T20:13:20.692458",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<video width=\"432\" height=\"288\" controls autoplay>\n",
       "  <source type=\"video/mp4\" src=\"data:video/mp4;base64,AAAAHGZ0eXBNNFYgAAACAGlzb21pc28yYXZjMQAAAAhmcmVlAAAfHW1kYXQAAAKtBgX//6ncRem9\n",
       "5tlIt5Ys2CDZI+7veDI2NCAtIGNvcmUgMTU1IHIyOTE3IDBhODRkOTggLSBILjI2NC9NUEVHLTQg\n",
       "QVZDIGNvZGVjIC0gQ29weWxlZnQgMjAwMy0yMDE4IC0gaHR0cDovL3d3dy52aWRlb2xhbi5vcmcv\n",
       "eDI2NC5odG1sIC0gb3B0aW9uczogY2FiYWM9MSByZWY9MyBkZWJsb2NrPTE6MDowIGFuYWx5c2U9\n",
       "MHgzOjB4MTEzIG1lPWhleCBzdWJtZT03IHBzeT0xIHBzeV9yZD0xLjAwOjAuMDAgbWl4ZWRfcmVm\n",
       "PTEgbWVfcmFuZ2U9MTYgY2hyb21hX21lPTEgdHJlbGxpcz0xIDh4OGRjdD0xIGNxbT0wIGRlYWR6\n",
       "b25lPTIxLDExIGZhc3RfcHNraXA9MSBjaHJvbWFfcXBfb2Zmc2V0PS0yIHRocmVhZHM9NiBsb29r\n",
       "YWhlYWRfdGhyZWFkcz0xIHNsaWNlZF90aHJlYWRzPTAgbnI9MCBkZWNpbWF0ZT0xIGludGVybGFj\n",
       "ZWQ9MCBibHVyYXlfY29tcGF0PTAgY29uc3RyYWluZWRfaW50cmE9MCBiZnJhbWVzPTMgYl9weXJh\n",
       "bWlkPTIgYl9hZGFwdD0xIGJfYmlhcz0wIGRpcmVjdD0xIHdlaWdodGI9MSBvcGVuX2dvcD0wIHdl\n",
       "aWdodHA9MiBrZXlpbnQ9MjUwIGtleWludF9taW49MSBzY2VuZWN1dD00MCBpbnRyYV9yZWZyZXNo\n",
       "PTAgcmNfbG9va2FoZWFkPTQwIHJjPWNyZiBtYnRyZWU9MSBjcmY9MjMuMCBxY29tcD0wLjYwIHFw\n",
       "bWluPTAgcXBtYXg9NjkgcXBzdGVwPTQgaXBfcmF0aW89MS40MCBhcT0xOjEuMDAAgAAAF6NliIQA\n",
       "F//+99S3zLLtU2+2C6j3op4mX0N1JQGblsTtOoAAAAMABnddzdfZ7UFwH2gAB5iyR2B/h/8ABvrg\n",
       "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\n",
       "\">\n",
       "  Your browser does not support the video tag.\n",
       "</video>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from live_plot import anim_2d\n",
    "\n",
    "x0 = -10\n",
    "lr = 0.001\n",
    "iterations = 15\n",
    "points= []\n",
    "\n",
    "x_range = torch.arange(-10, 10, 0.1)\n",
    "x = torch.Tensor([x0]).requires_grad_()\n",
    "\n",
    "optimizer = torch.optim.Adam([x], lr=lr)\n",
    "mini = 50\n",
    "for i in range(iterations):\n",
    "    optimizer.zero_grad()\n",
    "    f = func_2d(x)\n",
    "    f.backward()\n",
    "    points += [(x.item(), f.item())]\n",
    "    if (f.item()<mini):\n",
    "        mini=f.item()\n",
    "    elif (f.item()>mini):\n",
    "        break\n",
    "    optimizer.step()\n",
    "    \n",
    "anim_2d(x_range, func_2d, points, 1000)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6e543a2",
   "metadata": {
    "papermill": {
     "duration": 0.017643,
     "end_time": "2023-01-10T20:13:22.487537",
     "exception": false,
     "start_time": "2023-01-10T20:13:22.469894",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 3 задача Наиболее правильное решение"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "215fd6e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-01-10T20:13:22.527616Z",
     "iopub.status.busy": "2023-01-10T20:13:22.527165Z",
     "iopub.status.idle": "2023-01-10T20:13:23.416724Z",
     "shell.execute_reply": "2023-01-10T20:13:23.415476Z"
    },
    "papermill": {
     "duration": 0.911898,
     "end_time": "2023-01-10T20:13:23.418993",
     "exception": false,
     "start_time": "2023-01-10T20:13:22.507095",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def f(x: torch.Tensor) -> torch.Tensor:\n",
    "    return torch.log(x ** 2 + 10 * x + 10)\n",
    "\n",
    "\n",
    "SIGN = -1  # 1 - max, -1 - min\n",
    "\n",
    "START, END = -10, 10\n",
    "EPS = 0.0000001\n",
    "LR = 0.00005\n",
    "\n",
    "X = torch.arange(START, END + 0.001, 0.001)\n",
    "Y = f(X)\n",
    "plt.plot(X.detach(), Y.detach());"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d12b3ee4",
   "metadata": {
    "papermill": {
     "duration": 0.017925,
     "end_time": "2023-01-10T20:13:23.454796",
     "exception": false,
     "start_time": "2023-01-10T20:13:23.436871",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 39.950017,
   "end_time": "2023-01-10T20:13:24.901877",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-01-10T20:12:44.951860",
   "version": "2.3.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
